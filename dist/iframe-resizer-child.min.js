window.iFrameResizer={onReady:null,create:(options={})=>{const iframeResizerInstance=new IframeResizer(options);if(typeof window.iFrameResizer.onReady==="function"){window.iFrameResizer.onReady(iframeResizerInstance)}return iframeResizerInstance}};class IframeResizer{constructor(options={}){this.lastHeight=null;const defaultOptions={targetOrigin:"*",resize:true,scroll:true,log:false};this.options={...defaultOptions,...options};this.log("Initializing",this.options);if(this.options.resize){this.initResizeListener()}if(this.options.scroll){this.initScrollListener()}}initResizeListener(){window.addEventListener("resize",this.onResize.bind(this));const targetNode=document.documentElement;const config={childList:true,subtree:true,attributes:true};const observer=new MutationObserver(()=>this.onResize());observer.observe(targetNode,config)}initScrollListener(){window.addEventListener("scroll",this.onScroll.bind(this))}onResize(){const height=document.documentElement.scrollHeight;if(height!==this.lastHeight){this.lastHeight=height;this.sendMessage("resize",{height:height})}}onScroll(){const top=window.scrollY||document.documentElement.scrollTop;const left=window.scrollX||document.documentElement.scrollLeft;this.sendMessage("scroll",{top:top,left:left})}log(message,data){if(this.options.log){console.log("[LOG][iframe child]: "+message,data)}}sendMessage(type,data){this.log("Sending message",{type:type,...data});window.parent.postMessage({type:type,...data},this.options.targetOrigin)}}